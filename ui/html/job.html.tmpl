<!DOCTYPE html>
<html>
  <head>
    <link rel="stylesheet" href="/css/styles.css">
    <title>Goflow</title>
    <script src="/src/plain.js"></script>
  </head>
  <body>
    <div class="top-nav">
      <h1><a href="/">Goflow</a></h1>
    </div>
    <div class="job-info">
      <strong class="job-info-title">{{ .jobName }}</strong>
      <div>
        <div id="schedule-badge-{{ .jobName }}">{{ .schedule }}</div>
      </div>
      <div class="button-container-job-page">
        <button id="button-toggle-{{ .jobName }}" class="button" onclick="buttonPress('toggle', {{ .jobName }})">Toggle scheduling</button>
        <button id="button-submit-{{ .jobName }}" class="button" onclick="buttonPress('submit', {{ .jobName }})">Submit</button>
      </div>
    </div>
    <div class="job-container">
      <div class="task-table", id="task-table">
        <div>Task</div>
        <div>State</div>
        {{ range $ix, $taskName := .taskNames }}
        <div>{{ $taskName }}</div>
        <div class="status-wrapper" id="{{ $taskName }}"></div>
        {{ end }}
      </div>
      <div id="last-job-run-ts-wrapper">Last run:</div>
      <div class="graph-container" style="width:8000px;">
      </div>
    </div>
  </body>
</html>
<script type="module">
  import mermaid from 'https://cdn.jsdelivr.net/npm/mermaid@10/dist/mermaid.esm.min.mjs';
  let config = { startOnLoad: true, flowchart: { useMaxWidth: false, htmlLabels: true } };
  mermaid.initialize(config);

  async function getDag(jobName) {
    const response = await fetch(`/api/jobs/${jobName}`);
    const json = await response.json();
    return json.dag;
  }
  
  const drawGraph = async function(jobName)  {
    const dag = await getDag(jobName);
  
    var graphDefinition = "graph LR;\n";
  
    for (var key in dag) {
      graphDefinition += `  ${key}["${key}"];\n`;
      for (var val in dag[key]) {
        graphDefinition += `  ${key} --> ${dag[key][val]};\n`;
      }
    }
  
    var element = document.querySelector("div.graph-container");
    console.log("woahh");
    console.log(element);
    const { svg } = await mermaid.render("graph", graphDefinition);
    element.innerHTML = svg;
  };

  drawGraph({{ .jobName }});
</script>
<script>updateJobActive({{ .jobName }})</script>
<script>readTaskStream({{ .jobName }})</script>
